@using HomeFinder.Models;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity;
@using System;
@using System.IO;
@using System.Collections.Generic;
@using System.Net.NetworkInformation;
@using System.Threading.Tasks;
@using Microsoft.EntityFrameworkCore;
@using HomeFinder.Data;
@using System.Linq;
@inject IHttpContextAccessor httpContextAccessor
@inject HomeFinderContext context
<style>

    #properties-container {
         display: flex;
    }

    #properties-container > div {
       
        min-height: 25rem;
        width : 33%;
        border : 2px solid;
    }

    #left-side > div {
        height: 50%;
        width : 100%;
        border : 2px solid;
        overflow-y : auto;
        
    }

    #left-over > a {
        background-color: #eee;
        color: black;
        display: block;
        padding: 12px;
        text-decoration: none;
        border-bottom: 0.5px solid;
    }

    #left-under > a {
        background-color: #eee;
        color: black;
        display: block;
        padding: 12px;
        text-decoration: none;
        border-bottom: 0.5px solid;
    }

</style>

<h2 class="text-center">Your Properties</h2>
<div id="properties-container">
    <div id="left-side">
        <div id="left-over">
            
            @foreach (var property in propertyObjects)
           {
               <a href="#" @onclick="() => SetProperty(property)">@property.Address.FullAddress</a>
           }
        </div>
        <div id="left-under">
            @if (noticeOfInterests==null)
       {
            <h5 class="mt-3">Select Adress to see notice of interests</h5>
        }
        else
        {
            @foreach (var person in noticeOfInterests)
           {
               <a href="#" @onclick="() => GetPersonalInfo(person)">@person.FirstName @person.LastName</a>
           }
        
        }
        </div>
    </div>
    <div id="middle-side">
        @if (UserToDisplay==null)
       {
            <h5 class="mt-3">Select User to see more info</h5>
        }
        else
        {
            <p><h1>Firstname: @UserToDisplay.FirstName</h1></p>
            <p><h1>Lastname: @UserToDisplay.LastName</h1></p>
            <p><h1>Email: @UserToDisplay.Email</h1></p>
            <p><h1>Address: @UserToDisplay.Address.FullAddress</h1></p>
        
        }
    </div>
    <div id="right-side" class=" text-center">
        @if (propertyObjectToDisplay==null)
       {
            <h5 class="mt-3">Select Adress to see more info</h5>
        }
        else
        {
            
        <div class="card">
            <div class="card-body">
                @if (propertyObjectToDisplay.Images != null)
                {

                    <img class="card-img" src="@propertyObjectToDisplay.Images[0].Path" asp-append-version="true"/>
                }
                <div class="card-title">
                    @propertyObjectToDisplay.Address.StreetAddress
                    @propertyObjectToDisplay.Address.PostalCode
                    @propertyObjectToDisplay.Address.City
                    @propertyObjectToDisplay.Address.Country
                </div>
                <p class="card-text">@propertyObjectToDisplay.Description</p>
                <p class="card-text">@propertyObjectToDisplay.NumberOfRooms</p>
                <p class="card-text">@propertyObjectToDisplay.Area</p>
                <p class="card-text">@propertyObjectToDisplay.PropertyType.PropertyTypeName</p>
                <p class="card-text">@propertyObjectToDisplay.Realtor.FirstName @propertyObjectToDisplay.Realtor.LastName</p>
                <p class="card-text">@propertyObjectToDisplay.Realtor.Email</p>
                <p class="card-text">@propertyObjectToDisplay.Realtor.PhoneNumber</p>

            </div>
            <div class="card-footer">
                <a href="PropertyObjects/Edit/@propertyObjectToDisplay.Id">Edit</a> |
                <a href="PropertyObjects/Details/@propertyObjectToDisplay.Id">Details</a> |
                <a href="PropertyObjects/Delete/@propertyObjectToDisplay.Id">Delete</a>
            </div>
        </div>
        }
    </div>
</div>
@code {

    public IEnumerable<PropertyObject> propertyObjects { get; set; }

    public PropertyObject propertyObjectToDisplay { get; set; }

    public List<HomeFinderUser> noticeOfInterests { get; set; }

    public HomeFinderUser Realtor { get; set; }

    public HomeFinderUser UserToDisplay { get; set; }

    public string UserName;

    public void GetRealtor()
    {
        UserName = httpContextAccessor.HttpContext.User.Identity.Name;
        Realtor = context.Users.FirstOrDefault(i => i.Email == UserName);

    }

    protected override void OnInitialized()
    {
        GetRealtor();
        propertyObjects = GetProperties();
        ChangeImagePath();
    }

    public void SetProperty(PropertyObject property)
    {
        propertyObjectToDisplay = property;

        noticeOfInterests = SetNoticeOfInterests();

        UserToDisplay = null;
    }

    public void GetPersonalInfo(HomeFinderUser user)
    {
        UserToDisplay = user;
    }

    public List<HomeFinderUser> SetNoticeOfInterests()
    {
        List<HomeFinderUser> listToSend = new();

        foreach (var item in context.NoticeOfInterests.Include(n => n.User).ThenInclude(u => u.Address).ToList())
        {
            if (item.PropertyObject==propertyObjectToDisplay)
            {
                listToSend.Add(item.User);
            }
        }

        return listToSend;
    }

    public IEnumerable<PropertyObject> GetProperties()
    {
        return context.PropertyObjects.Where(p => p.RealtorId == Realtor.Id).Include(p => p.Address).Include(p => p.Realtor).Include(p => p.PropertyType).Include(p => p.Images).ToList();
    }

    public IEnumerable<PropertyObject> ChangeImagePath()
    {
        propertyObjects = GetProperties();
        foreach(var property in propertyObjects)
        {
            foreach(var image in property.Images)
            {
               var splited = image.Path.Split("/");
               image.Path = splited[1] + "/" + splited[2];
                
            }
        }
        return propertyObjects;
    }
}

