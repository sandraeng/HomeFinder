@using HomeFinder.Models;
@using Microsoft.AspNetCore.Components;
@using Microsoft.AspNetCore.Components.Web;
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity;
@using System;
@using System.IO;
@using System.Collections.Generic;
@using System.Net.NetworkInformation;
@using System.Threading.Tasks;
@using Microsoft.EntityFrameworkCore;
@using HomeFinder.Data;
@using System.Linq;
@inject IHttpContextAccessor httpContextAccessor
@inject HomeFinderContext context

<div id="properties-container">
    <div id="left-side" class="text-center">
        <h5 id="realtorViewObjectsTitles">Properties</h5>
        <div id="left-over">

            <div class="card bg-light" style="min-height: 80%">
                <div class="card-body">
                    <div class="btn-group-vertical btn-group-toggle" style="display:block;" data-toggle="buttons">
                        @foreach (var property in propertyObjects)
                        {
                            <label class="btn btn-primary propertiesText" @onclick="() => SetProperty(property)" for="@property.Id">
                                <input type="radio" class="btn-check" name="options-outlined" id="@property.Id" autocomplete="off">
                                @property.Address.FullAddress
                            </label>
                        }
                    </div>
                </div>
            </div>
        </div>
        <h5 id="realtorViewObjectsTitles">Notice of interests</h5>
        <div id="left-under" class="text-center">
            <div class="card bg-light" style="min-height: 50%">
                <div class="card-body" style="min-height: 100%">
                    <div class="btn-group-vertical btn-group-toggle" style="display:block;" data-toggle="buttons" id="notice-of-interests">
                        @if (noticeOfInterests == null)
                        {
                            <h6 class="mt-3">Select Address to see notice of interests</h6>
                        }
                        else if (noticeOfInterests.Count() == 0)
                        {
                            <h6 class="mt-3">There is no notice of interests to this property</h6>
                        }
                        else
                        {
                            @foreach (var person in noticeOfInterests)
                            {
                                <label class="btn btn-primary propertiesText" style="width: 100%" @onclick="() => GetPersonalInfo(person)">
                                    <input type="radio" class="btn-check" name="options" id="option+@person.Id" autocomplete="off"> @person.FirstName @person.LastName
                                </label>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div id="middle-side" class="text-center">
        <div class="card bg-light" style="min-height: 100%">
            <div class="card-title"><h5 id="realtorViewObjectsTitles">Contact</h5></div>
            @if (UserToDisplay == null)
            {
                <h6 class="mt-3">Select User to see more info</h6>
            }
            else
            {
                <div class="card-body">
                    <h5 class="card-title">Info</h5>
                    <p class="card-text"><strong>Firstname:</strong> @UserToDisplay.FirstName</p>
                    <p class="card-text"><strong>Lastname:</strong> @UserToDisplay.LastName</p>
                    <p class="card-text"><strong>E-mail:</strong> @UserToDisplay.Email</p>
                    <p class="card-text"><strong>Address:</strong> @UserToDisplay.Address.FullAddress</p>
                </div>
            }
        </div>
    </div>
    <div id="right-side" class="text-center">
        <div class="card">
            <div class="card-title"><h5 id="realtorViewObjectsTitles">Selected object</h5></div>
            @if (propertyObjectToDisplay == null)
            {
                <h6 class="mt-3">Select Adress to see more info</h6>
            }
            else
            {
                <div class="card-body">
                    @if (propertyObjectToDisplay.Images != null)
                    {

                        <img class="card-img" src="@propertyObjectToDisplay.Images[0].Path" asp-append-version="true" />
                    }
                    <div class="card-title">
                        @propertyObjectToDisplay.Address.StreetAddress,
                        @propertyObjectToDisplay.Address.PostalCode
                        @propertyObjectToDisplay.Address.City
                        @propertyObjectToDisplay.Address.Country
                    </div>
                    <p class="card-text"><strong>Description:</strong></p>
                    <textarea name="message" id="formBox__messageInput" cols="30" rows="2">
                    <strong>Description:</strong> @propertyObjectToDisplay.Description</textarea>

                    <p class="card-text"><strong>Number of rooms:</strong> @propertyObjectToDisplay.NumberOfRooms rooms</p>
                    <p class="card-text"><strong>Area:</strong> @propertyObjectToDisplay.Area m²</p>
                    <p class="card-text"><strong>Type:</strong> @propertyObjectToDisplay.PropertyType.PropertyTypeName</p>
                    <p class="card-text"><strong>Realtor:</strong> @propertyObjectToDisplay.Realtor.FirstName @propertyObjectToDisplay.Realtor.LastName</p>
                    <p class="card-text"><strong>E-mail:</strong> @propertyObjectToDisplay.Realtor.Email</p>
                    <p class="card-text"><strong>Phone number:</strong> @propertyObjectToDisplay.Realtor.PhoneNumber</p>
                </div>
                <div class="card-footer">
                    <a href="PropertyObjects/Edit/@propertyObjectToDisplay.Id">Edit</a> |
                    <a href="PropertyObjects/Details/@propertyObjectToDisplay.Id">Details</a> |
                    <a href="PropertyObjects/Delete/@propertyObjectToDisplay.Id">Delete</a>
                </div>
            }
        </div>
    </div>
</div>

@code {

    public IEnumerable<PropertyObject> propertyObjects { get; set; }

    public PropertyObject propertyObjectToDisplay { get; set; }

    public List<HomeFinderUser> noticeOfInterests { get; set; }

    public HomeFinderUser Realtor { get; set; }

    public HomeFinderUser UserToDisplay { get; set; }

    public string UserName;

    public void GetRealtor()
    {
        UserName = httpContextAccessor.HttpContext.User.Identity.Name;
        Realtor = context.Users.FirstOrDefault(i => i.Email == UserName);
    }

    protected override void OnInitialized()
    {
        GetRealtor();
        propertyObjects = GetProperties();
        ChangeImagePath();
    }

    public void SetProperty(PropertyObject property)
    {
        noticeOfInterests = new List<HomeFinderUser>();
        UserToDisplay = null;
        propertyObjectToDisplay = property;
        noticeOfInterests = SetNoticeOfInterests();
    }

    public void GetPersonalInfo(HomeFinderUser user)
    {
        UserToDisplay = user;
    }

    public List<HomeFinderUser> SetNoticeOfInterests()
    {
        List<HomeFinderUser> listToSend = new();

        foreach (var item in context.NoticeOfInterests.Include(n => n.User).ThenInclude(u => u.Address).ToList())
        {
            if (item.PropertyObject == propertyObjectToDisplay)
            {
                listToSend.Add(item.User);
            }
        }
        return listToSend;
    }

    public IEnumerable<PropertyObject> GetProperties()
    {
        return context.PropertyObjects.Where(p => p.RealtorId == Realtor.Id).Include(p => p.Address).Include(p => p.Realtor).Include(p => p.PropertyType).Include(p => p.Images).ToList();
    }

    public IEnumerable<PropertyObject> ChangeImagePath()
    {
        propertyObjects = GetProperties();
        foreach (var property in propertyObjects)
        {
            foreach (var image in property.Images)
            {
                var splited = image.Path.Split("/");
                image.Path = splited[1] + "/" + splited[2];
            }
        }
        return propertyObjects;
    }
}

